{"version":3,"file":"dashboard-SMkrEZ5l.js","sources":["../../src/ui/stats-grid.tsx","../../src/routes/dashboard.tsx"],"sourcesContent":["import { useQuery } from '@tanstack/react-query';\n\nimport { Card, CardDescription, CardHeader, CardTitle } from './card';\n\ninterface StatsResponse {\n  totalProjects: number;\n  pendingBookings: number;\n  unreadMessages: number;\n}\n\nasync function fetchStats(): Promise<StatsResponse> {\n  const response = await fetch('/api/v2/stats');\n  if (!response.ok) {\n    throw new Error('Failed to load dashboard stats');\n  }\n  return response.json() as Promise<StatsResponse>;\n}\n\nexport function StatsGrid() {\n  const { data, error, isLoading } = useQuery({\n    queryKey: ['dashboardStats'],\n    queryFn: fetchStats,\n    retry: 1,\n    enabled: (import.meta.env.VITE_ENABLE_NEW_ADMIN ?? 'false') === 'true'\n  });\n\n  if (!((import.meta.env.VITE_ENABLE_NEW_ADMIN ?? 'false') === 'true')) {\n    return (\n      <Card className=\"bg-slate-900/80\">\n        <CardHeader>\n          <CardTitle>Dashboard coming soon</CardTitle>\n          <CardDescription>\n            Enable the new admin UI feature flag once the API migration is complete to see live\n            metrics.\n          </CardDescription>\n        </CardHeader>\n      </Card>\n    );\n  }\n\n  if (isLoading) {\n    return (\n      <div className=\"grid gap-4 md:grid-cols-3\">\n        {Array.from({ length: 3 }).map((_, index) => (\n          <div key={index} className=\"h-32 animate-pulse rounded-xl bg-slate-800/60\" />\n        ))}\n      </div>\n    );\n  }\n\n  if (error || !data) {\n    return (\n      <Card className=\"bg-rose-950/40 text-rose-100\">\n        <CardHeader>\n          <CardTitle>Unable to load stats</CardTitle>\n          <CardDescription>{error instanceof Error ? error.message : 'Unknown error'}</CardDescription>\n        </CardHeader>\n      </Card>\n    );\n  }\n\n  return (\n    <div className=\"grid gap-4 md:grid-cols-3\">\n      <Card className=\"bg-slate-900/80\">\n        <CardHeader>\n          <CardTitle>Total Projects</CardTitle>\n          <CardDescription>{data.totalProjects}</CardDescription>\n        </CardHeader>\n      </Card>\n      <Card className=\"bg-slate-900/80\">\n        <CardHeader>\n          <CardTitle>Pending Bookings</CardTitle>\n          <CardDescription>{data.pendingBookings}</CardDescription>\n        </CardHeader>\n      </Card>\n      <Card className=\"bg-slate-900/80\">\n        <CardHeader>\n          <CardTitle>Unread Messages</CardTitle>\n          <CardDescription>{data.unreadMessages}</CardDescription>\n        </CardHeader>\n      </Card>\n    </div>\n  );\n}\n","import { Card, CardDescription, CardHeader, CardTitle } from '../ui/card';\nimport { StatsGrid } from '../ui/stats-grid';\n\nexport default function DashboardRoute() {\n  return (\n    <div className=\"space-y-6\">\n      <div>\n        <h2 className=\"text-3xl font-semibold tracking-tight\">Welcome back</h2>\n        <p className=\"text-muted-foreground\">\n          Track portfolio performance, manage projects, and monitor bookings in one place.\n        </p>\n      </div>\n      <StatsGrid />\n      <div className=\"grid gap-4 md:grid-cols-2\">\n        <Card>\n          <CardHeader>\n            <CardTitle>Migration Status</CardTitle>\n            <CardDescription>\n              New admin interface is under active development. Legacy admin remains available while\n              parity is achieved.\n            </CardDescription>\n          </CardHeader>\n        </Card>\n        <Card>\n          <CardHeader>\n            <CardTitle>Next Steps</CardTitle>\n            <CardDescription>\n              Connect the new API once the Prisma layer is finalized, then enable the SPA via\n              feature flag.\n            </CardDescription>\n          </CardHeader>\n        </Card>\n      </div>\n    </div>\n  );\n}\n"],"names":["fetchStats","response","StatsGrid","data","error","isLoading","useQuery","jsx","Card","CardHeader","CardTitle","CardDescription","DashboardRoute","jsxs"],"mappings":"2GAUA,eAAeA,GAAqC,CAClD,MAAMC,EAAW,MAAM,MAAM,eAAe,EAC5C,GAAI,CAACA,EAAS,GACZ,MAAM,IAAI,MAAM,gCAAgC,EAElD,OAAOA,EAAS,KAAA,CAClB,CAEO,SAASC,GAAY,CAC1B,KAAM,CAAE,KAAAC,EAAM,MAAAC,EAAO,UAAAC,CAAA,EAAcC,EAAS,CAC1C,SAAU,CAAC,gBAAgB,EAC3B,QAASN,EACT,MAAO,EACP,QAAmD,EAAa,CACjE,EAGC,OACEO,EAAAA,IAACC,EAAA,CAAK,UAAU,kBACd,gBAACC,EAAA,CACC,SAAA,CAAAF,EAAAA,IAACG,GAAU,SAAA,wBAAqB,EAChCH,EAAAA,IAACI,GAAgB,SAAA,+FAGjB,CAAA,CAAA,CACF,CAAA,CACF,CA+CN,CChFA,SAAwBC,GAAiB,CACvC,OACEC,EAAAA,KAAC,MAAA,CAAI,UAAU,YACb,SAAA,CAAAA,OAAC,MAAA,CACC,SAAA,CAAAN,EAAAA,IAAC,KAAA,CAAG,UAAU,wCAAwC,SAAA,eAAY,EAClEA,EAAAA,IAAC,IAAA,CAAE,UAAU,wBAAwB,SAAA,kFAAA,CAErC,CAAA,EACF,QACCL,EAAA,EAAU,EACXW,EAAAA,KAAC,MAAA,CAAI,UAAU,4BACb,SAAA,CAAAN,EAAAA,IAACC,EAAA,CACC,gBAACC,EAAA,CACC,SAAA,CAAAF,EAAAA,IAACG,GAAU,SAAA,kBAAA,CAAgB,EAC3BH,EAAAA,IAACI,GAAgB,SAAA,2GAAA,CAGjB,CAAA,CAAA,CACF,CAAA,CACF,EACAJ,EAAAA,IAACC,EAAA,CACC,SAAAK,EAAAA,KAACJ,EAAA,CACC,SAAA,CAAAF,EAAAA,IAACG,GAAU,SAAA,YAAA,CAAU,EACrBH,EAAAA,IAACI,GAAgB,SAAA,+FAAA,CAGjB,CAAA,CAAA,CACF,CAAA,CACF,CAAA,CAAA,CACF,CAAA,EACF,CAEJ"}